class Solution {
    // Function to find minimum number of pages.
    public static long findPages(int n, int[] arr, int m) {
        // Your code here
         if (n < m) {
            return -1;
        }

        int sum = 0;
        int max = 0;
        
        for (int i = 0; i < n; i++) {
            sum += arr[i];
            if (arr[i] > max) {
                max = arr[i];
            }
        }

        int low = max;
        int high = sum;
        int result = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (isFeasible(arr, n, m, mid)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return result;
    }

    private static boolean isFeasible(int[] arr, int n, int m, int maxPages) {
        int studentCount = 1;
        int currentSum = 0;

        for (int i = 0; i < n; i++) {
            currentSum += arr[i];

            if (currentSum > maxPages) {
                studentCount++;
                currentSum = arr[i];

                if (studentCount > m) {
                    return false;
                }
            }
        }

        return true;
    }
};
